{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/express-testing","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tag\": [\"express\", \"nodejs\", \"test\", \"테스트\"],\n  \"title\": \"Express 유닛 테스트 작성하기\",\n  \"slug\": \"express-testing\",\n  \"date\": \"2022-02-17T15:00:00.000Z\",\n  \"excerpt\": \"Express 백엔드의 유닛테스트 삽질기\",\n  \"image\": \"../images/zojuy79lo3fn3qdt7g6p.png\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uC694\\uC998\\uC740 Nest.js\\uB77C\\uB294 \\uAC15\\uB825\\uD55C node.js \\uBC31\\uC5D4\\uB4DC \\uD504\\uB808\\uC784\\uC6CC\\uD06C\\uC758 \\uB4F1\\uC7A5\\uC73C\\uB85C \\uC21C\\uC218 express\\uB85C\\uB9CC \\uBC31\\uC5D4\\uB4DC\\uB97C \\uAD6C\\uC131\\uD558\\uB294 \\uACBD\\uC6B0\\uAC00 \\uC810\\uC810 \\uC904\\uC5B4\\uB4DC\\uB294\\uAC83 \\uAC19\\uB2E4.\"), mdx(\"p\", null, \"\\uADF8\\uB798\\uB3C4 \\uC9C0\\uAE08 \\uB2E4\\uB2C8\\uB294 \\uD68C\\uC0AC\\uC5D0\\uC11C\\uB294 Nest.js \\uB3C4\\uC785\\uC744 \\uACE0\\uB824\\uD558\\uACE0\\uB294 \\uC788\\uC9C0\\uB9CC \\uC5EC\\uC804\\uD788 express\\uAE30\\uBC18 \\uBC31\\uC5D4\\uB4DC\\uB97C \\uC6B4\\uC601\\uD558\\uACE0 \\uC788\\uACE0 \\uC774 \\uC0C1\\uD0DC\\uC5D0\\uC11C \\uC870\\uAE08\\uB354 \\uC88B\\uC740 \\uAD6C\\uC870\\uB97C \\uAC16\\uCD94\\uACE0 \\uCD5C\\uC18C\\uD55C\\uC758 \\uD14C\\uC2A4\\uD2B8 \\uCF54\\uB4DC\\uB97C \\uC791\\uC131\\uD558\\uB824\\uACE0 \\uC0BD\\uC9C8\\uD588\\uB358 \\uAE30\\uB85D\\uC744 \\uB0A8\\uACA8\\uBCF8\\uB2E4.\"), mdx(\"h3\", null, \"Controller\\uC5D0 \\uB300\\uD55C unit test\"), mdx(\"p\", null, \"\\uC804\\uD1B5\\uC801\\uC778 model, controller, service \\uAD6C\\uC870\\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uCF54\\uB4DC\\uB97C \\uC791\\uC131\\uD558\\uB294 \\uC911\\uC774\\uB2E4.\"), mdx(\"p\", null, \"\\uC6B0\\uC120 service \\uCF54\\uB4DC\\uC5D0 \\uB300\\uD55C \\uD14C\\uC2A4\\uD2B8\\uB97C \\uC791\\uC131\\uD574\\uBCF4\\uC790. \\uC544\\uB798\\uC640 \\uAC19\\uC740 \\uC11C\\uBE44\\uC2A4 \\uCF54\\uB4DC\\uAC00 \\uC788\\uB2E4\\uACE0 \\uAC00\\uC815\\uD558\\uC790.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), \"\\nconst getVariant: RequestHandler = async (req, res, next) => {\\n  const { id } = req.params as { id: string };\\n  const { pos } = req.query;\\n\\n  if (!id || !pos) {\\n    res.status(400).send(\\\"Invalid request parameters\\\");\\n    return;\\n  }\\n\\n  try {\\n    const variant = await VariantService.getVariant({ id, pos });\\n    res.json(variant);\\n  } catch(e) {\\n    // error handling\\n  }\\n}\\n\\n\")), mdx(\"p\", null, \"\\uC704 controller\\uC5D0 \\uB300\\uD55C unit test\\uB97C \\uC791\\uC131\\uD55C\\uB2E4\\uBA74 \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), \"\\ndescribe(\\\"Variant Controller - getVariant\\\", () => {\\n  it(\\\"should invoke res.json with return value of 'VariantService.getVariant'\\\", async () => {\\n    const req: any = {\\n      params: { id: \\\"test-id\\\" },\\n      query: { pos: \\\"test-position\\\" }\\n    };\\n\\n    const res: any = {\\n      json: jest.fn()\\n    }\\n\\n    const next = jest.fn();\\n\\n    jest.spyOn(VariantService, \\\"getVariant\\\").mockResolvedValue(mockServiceReturnValue); // Service\\uC758 return \\uAC12\\uC744 mocking \\uD574\\uC90C\\n    await VariantController.getVariant(req, res, next);\\n    expect(res.json).toHaveBeenCalledWith(mockServiceReturnValue);\\n\\n  })\\n\\n})\\n\\n\")), mdx(\"p\", null, \"\\uBA3C\\uC800 express \\uCEE8\\uD2B8\\uB864\\uB7EC\\uC758 \\uC778\\uC790\\uB4E4\\uC778 req, res object\\uC640 next\\uD568\\uC218\\uB97C mocking \\uD574\\uC8FC\\uC5C8\\uB2E4. \\uC2E4\\uC81C express\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Request\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Response\"), \" \\uAC1D\\uCCB4\\uB97C \\uC644\\uBCBD\\uD788 mocking\\uD558\\uB824\\uBA74 \\uBD88\\uD544\\uC694\\uD55C \\uC218\\uB9CE\\uC740 property\\uB4E4\\uC744 \\uC815\\uC758\\uD574\\uC8FC\\uC5B4\\uC57C \\uD558\\uBBC0\\uB85C \\uB2E8\\uC21C\\uD788 any \\uCC98\\uB9AC\\uB97C \\uD574\\uC8FC\\uC5C8\\uB2E4.\"), mdx(\"p\", null, \"\\uADF8 \\uB2E4\\uC74C\\uC740 \\uD574\\uB2F9 \\uCEE8\\uD2B8\\uB864\\uB7EC\\uAC00 \\uC774\\uC6A9\\uD558\\uB294 Service\\uC758 method\\uB4E4\\uC744 mocking\\uD574\\uC8FC\\uC5C8\\uB2E4. \\uC774 \\uB54C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jest.fn()\"), \"\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mockResolvedValue\"), \" method\\uB97C \\uC774\\uC6A9\\uD558\\uBA74 promise\\uC5D0 \\uB300\\uD55C \\uBC18\\uD658\\uAC12\\uC744 mocking\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"p\", null, \"\\uB9C8\\uC9C0\\uB9C9\\uC73C\\uB85C \\uD574\\uB2F9 mocking\\uB41C value\\uB97C \\uC778\\uC790\\uB85C res.json \\uD568\\uC218\\uAC00 \\uC2E4\\uD589\\uB418\\uC5C8\\uB294\\uC9C0\\uB97C \\uD14C\\uC2A4\\uD2B8\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uC774\\uAC83\\uC740 \\uD574\\uB2F9 request\\uAC00 \\uC544\\uBB34 \\uBB38\\uC81C\\uC5C6\\uC774 \\uC815\\uC0C1\\uC801\\uC73C\\uB85C \\uC218\\uD589\\uB420 \\uB54C\\uC5D0 \\uB300\\uD55C \\uD14C\\uC2A4\\uD2B8\\uC774\\uACE0 \\uB9CC\\uC57D \\uC798\\uBABB\\uB41C \\uC778\\uC790\\uB85C \\uC694\\uCCAD\\uC774 \\uB4E4\\uC5B4\\uC624\\uB294 \\uACBD\\uC6B0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"res.status(400).send()\"), \" \\uAC00 \\uC2E4\\uD589\\uB428\\uC744 \\uD14C\\uC2A4\\uD2B8\\uD574\\uC57C \\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uC774 \\uB54C response \\uAC1D\\uCCB4\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"status\"), \" \\uB9E4\\uC11C\\uB4DC\\uC640 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"send\"), \" \\uB9E4\\uC11C\\uB4DC\\uB97C \\uAC01\\uAC01 mocking\\uD574\\uC8FC\\uC5B4\\uC57C \\uD558\\uB294\\uB370 status\\uB9E4\\uC11C\\uB4DC\\uB294 \\uC790\\uAE30\\uC790\\uC2E0\\uC744 \\uB9AC\\uD134\\uD558\\uC5EC chaining\\uC774 \\uAC00\\uB2A5\\uD558\\uAC8C \\uD558\\uBBC0\\uB85C jest.fn\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mockReturnThis\"), \" \\uB9E4\\uC11C\\uB4DC\\uB97C \\uC774\\uC6A9\\uD558\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"h3\", null, \"Service unit test\"), mdx(\"p\", null, \"\\uC11C\\uBE44\\uC2A4\\uB97C \\uD14C\\uC2A4\\uD2B8\\uD558\\uB294 \\uACBD\\uC6B0 DB layer\\uB97C mocking\\uD558\\uACE0\\uC2F6\\uC740 \\uC720\\uD639\\uC5D0 \\uBE60\\uC9C0\\uAC8C \\uB418\\uB294\\uB370 \\uC2E4\\uC81C \\uB370\\uC774\\uD130 access\\uB97C mocking\\uD574\\uBC84\\uB9B0 service \\uD14C\\uC2A4\\uD2B8\\uB294 \\uBC18\\uCABD\\uC790\\uB9AC \\uD14C\\uC2A4\\uD2B8\\uB77C\\uACE0 \\uC0DD\\uAC01\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"FM\\uB300\\uB85C\\uB77C\\uBA74 \\uB85C\\uCEEC\\uC5D0 \\uB611\\uAC19\\uC740 DB\\uB97C \\uC124\\uCE58\\uD558\\uACE0 \\uD14C\\uC2A4\\uD2B8\\uB97C \\uC218\\uD589\\uD558\\uB294\\uAC8C \\uB9DE\\uACA0\\uC9C0\\uB9CC \\uB098\\uB294 \\uD14C\\uC2A4\\uD2B8\\uB97C github action\\uC758 workflow\\uB0B4\\uC5D0\\uC11C\\uB3C4 \\uC2E4\\uD589\\uD558\\uACE0\\uC790 \\uD588\\uAE30 \\uB54C\\uBB38\\uC5D0 aws\\uC758 \\uC0AC\\uB0B4 \\uAC1C\\uBC1C\\uACC4\\uC815\\uC744 \\uC774\\uC6A9\\uD558\\uAE30\\uB85C \\uD588\\uB2E4.\"), mdx(\"p\", null, \"\\uD604\\uC7AC \\uC6B0\\uB9AC \\uD68C\\uC0AC\\uC5D0\\uC11C\\uB294 dynamodb\\uB97C \\uC774\\uC6A9\\uD558\\uACE0 \\uC788\\uC73C\\uBBC0\\uB85C \\uD14C\\uC2A4\\uD2B8 \\uC2E4\\uD589 \\uC804 aws credential\\uB97C \\uC124\\uC815\\uD558\\uB294 \\uC791\\uC5C5\\uC774 \\uD544\\uC694\\uD558\\uB2E4. dynamoose\\uB77C\\uB294 orm\\uC744 \\uC774\\uC6A9\\uD558\\uACE0 \\uC788\\uB294\\uB370 \\uD574\\uB2F9 \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\\uC758 config\\uB97C \\uC774\\uC6A9\\uD574 aws sdk\\uC5D0 \\uC811\\uADFC\\uD560 \\uC218 \\uC788\\uB2E4. \\uBB3C\\uB860 \\uC9C1\\uC811 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aws-sdk\"), \" \\uD328\\uD0A4\\uC9C0\\uB97C \\uC774\\uC6A9\\uD574 \\uC124\\uC815\\uD560 \\uC218\\uB3C4 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), \"\\nimport dynamoose from \\\"dynamoose\\\";\\n\\nconst sdk = dynamoose.aws.sdk;\\n\\nexport default function AWSInit(profile: \\\"dev\\\" | \\\"prod\\\" = \\\"dev\\\"): void {\\n  sdk.config.update({\\n    region: \\\"ap-northeast-2\\\"\\n  });\\n\\n  const credentials = new sdk.SharedIniFileCredentials({ profile });\\n}\\n\\n\")), mdx(\"p\", null, \"\\uC774\\uB807\\uAC8C \\uC791\\uC131\\uD574\\uB193\\uC740 config \\uD568\\uC218\\uB97C \\uAC01 \\uD14C\\uC2A4\\uD2B8 \\uCF54\\uB4DC\\uC758 \\uCD5C\\uC0C1\\uB2E8\\uC5D0\\uC11C import\\uD574 \\uC2E4\\uD589\\uD574\\uC8FC\\uBA74 \\uB41C\\uB2E4. \\uC911\\uC694\\uD55C\\uAC83\\uC740 dynamodb\\uC5D0 \\uC811\\uADFC\\uD558\\uB294 \\uC11C\\uBE44\\uC2A4 \\uBAA8\\uB4C8\\uC744 import\\uD558\\uAE30 \\uC804\\uC5D0 \\uC2E4\\uD589\\uC744 \\uD574\\uC57C \\uD14C\\uC2A4\\uD2B8 \\uC218\\uD589 \\uC2DC \\uC815\\uC0C1\\uC791\\uB3D9\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uADF8\\uB807\\uB2E4\\uBA74 github action\\uC5D0\\uC11C\\uB3C4 \\uB3D9\\uC791\\uD558\\uAC8C \\uD558\\uB824\\uBA74 \\uC5B4\\uB5BB\\uAC8C \\uD574\\uC57C\\uD560\\uAE4C?\"), mdx(\"p\", null, \"\\uB294 \\uC774\\uBBF8 \\uB204\\uAC00 \\uB9CC\\uB4E4\\uC5B4\\uB193\\uC740 \\uC561\\uC158\\uC774 \\uC788\\uB2E4\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aws-actions/configure-aws-credentials\",\n    \"title\": \"aws-actions/configure-aws-credentials@v1\"\n  }), \"https://github.com/aws-actions/configure-aws-credentials\"), \" \"), mdx(\"p\", null, \"workflow\\uD30C\\uC77C\\uC5D0 \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uC124\\uC815\\uD558\\uBA74 aws-cli\\uC758 \\uBA85\\uB839\\uC5B4\\uB97C action\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uAC00\\uB2A5\\uD574\\uC9C4\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"- name: Configure AWS Credentials\\n  uses: aws-actions/configure-aws-credentials@v1\\n  with:\\n    aws-access-key-id: ${{ secrets.XXXX }}\\n    aws-secret-access-key: ${{ secrets.XXXX }}\\n    aws-region: ap-northeast-2\\n\")), mdx(\"p\", null, \"\\uC774\\uB807\\uAC8C \\uC791\\uC131\\uD55C \\uD6C4 \\uB2E4\\uC74C \\uC904\\uBD80\\uD130 aws-cli\\uBA85\\uB839\\uC5B4\\uB97C \\uC9C1\\uC811 \\uC785\\uB825\\uD574\\uC11C credential profile\\uC744 \\uC0DD\\uC131\\uD574\\uB3C4 \\uB418\\uACE0 \\uC6D0\\uD558\\uB294 aws \\uAD00\\uB828 \\uC791\\uC5C5\\uC744 \\uC218\\uD589\\uD560 \\uC218 \\uC788\\uB2E4. \\uB2F9\\uC5F0\\uD788 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"${{ secrets.XXX }}\"), \" \\uBD80\\uBD84\\uC5D0\\uB294 \\uB9AC\\uD30C\\uC9C0\\uD1A0\\uB9AC\\uC5D0 \\uC800\\uC7A5\\uD574\\uB193\\uC740 secret \\uAC12\\uC774 \\uB4E4\\uC5B4\\uAC00\\uC57C \\uD55C\\uB2E4.\"), mdx(\"h3\", null, \"Endpoint\\uC5D0 \\uB300\\uD55C \\uD1B5\\uD569\\uD14C\\uC2A4\\uD2B8\"), mdx(\"p\", null, \"\\uAC1C\\uBCC4 \\uBAA8\\uB4C8\\uC774 \\uC544\\uB2CC endpoint\\uC5D0 \\uB300\\uD55C \\uD14C\\uC2A4\\uD2B8\\uB294 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/visionmedia/supertest\",\n    \"title\": \"Supertest\"\n  }), \"Supertest\"), \" \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\\uB97C \\uC774\\uC6A9\\uD558\\uBA74 \\uD3B8\\uB9AC\\uD558\\uAC8C \\uC218\\uD589\\uD560 \\uC218 \\uC788\\uB2E4. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), \"describe(\\\"/variant/:id\\\", () => {\\n  it(\\\"\\\\[GET\\\\] - 200\\\", done => {\\n    jest.spyOn(VariantService, \\\"getVariant\\\").mockResolvedValue(somevalue);\\n    request(app)\\n      .get(`/variant/${id}?pos=${pos}`)\\n      .expect(200)\\n      .expect(\\\"Content-Type\\\", /json/)\\n      .expect(somevalue, done)\\n  })\\n})\\n\")), mdx(\"p\", null, \"\\uC774 \\uB54C service\\uB294 \\uADF8\\uB0E5 \\uBAA8\\uD0B9\\uC744 \\uD588\\uB294\\uB370 \\uC561\\uC158\\uC774 \\uB3CC \\uB54C\\uB9C8\\uB2E4 \\uD14C\\uC2A4\\uD2B8 \\uC2DC\\uAC04\\uC774 \\uC624\\uB798\\uAC78\\uB824\\uC11C service\\uC790\\uCCB4\\uC5D0 \\uB300\\uD55C unit\\uD14C\\uC2A4\\uD2B8\\uAC00 \\uC788\\uB294\\uB370 \\uAD73\\uC774 \\uB610 \\uC5EC\\uAE30\\uC11C \\uD574\\uC57C\\uD560\\uAE4C \\uC2F6\\uC5B4\\uC11C \\uC774\\uB807\\uAC8C \\uCC98\\uB9AC\\uD588\\uB2E4. \\uC0AC\\uC2E4 \\uBB50\\uAC00 \\uAC00\\uC7A5 \\uC88B\\uC740 \\uC811\\uADFC\\uBC29\\uC2DD\\uC778\\uC9C0\\uB294 \\uC798 \\uBAA8\\uB974\\uACA0\\uB2E4.\"), mdx(\"p\", null, \"\\uC774\\uB807\\uAC8C \\uD558\\uBA74 \\uAE30\\uBCF8\\uC801\\uC778 controller, service \\uADF8\\uB9AC\\uACE0 endpoint\\uC5D0 \\uB300\\uD55C \\uD14C\\uC2A4\\uD2B8 \\uCF54\\uB4DC \\uC791\\uC131\\uC774 \\uC644\\uB8CC\\uB41C\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"2022-02-17T15:00:00.000Z","excerpt":"Express 백엔드의 유닛테스트 삽질기","slug":"express-testing","title":"Express 유닛 테스트 작성하기"}}},"pageContext":{"id":"6f79d5b1-19a8-5f34-a102-6ed0ae50c58f"}},"staticQueryHashes":["3159585216","63159454"]}
{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/sort-algorithm","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tag\": [\"algorithm\", \"mit-6.006\", \"sort\"],\n  \"title\": \"MIT-6.006 Intoduction to Algorithms - Lecture3(Insertion sort, Merge sort)\",\n  \"slug\": \"sort-algorithm\",\n  \"date\": \"2021-07-10T15:00:00.000Z\",\n  \"excerpt\": \"Sorting algorithms\",\n  \"image\": \"../images/6-006f11.jpg\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\uC0BD\\uC785 \\uC815\\uB82C(Insertion Sort), \\uBCD1\\uD569 \\uC815\\uB82C(Merge Sort)\"), mdx(\"h2\", null, \"\\uC815\\uB82C\\uC774 \\uD544\\uC694\\uD55C \\uC774\\uC720?\"), mdx(\"p\", null, \"\\uB9CE\\uC740 \\uBB38\\uC81C\\uB4E4\\uC774 \\uC77C\\uB2E8 \\uC815\\uB82C\\uC774 \\uB41C \\uC774\\uD6C4\\uC5D4 \\uD6E8\\uC52C \\uD574\\uACB0\\uD558\\uAE30 \\uC26C\\uC6CC\\uC9D0\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC911\\uAC04\\uAC12\\uC744 \\uCC3E\\uB294 \\uBB38\\uC81C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC774\\uC9C4 \\uD0D0\\uC0C9\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB370\\uC774\\uD130 \\uC555\\uCD95\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCEF4\\uD4E8\\uD130 \\uADF8\\uB798\\uD53D \\uB4F1\")), mdx(\"h2\", null, \"\\uC0BD\\uC785 \\uC815\\uB82C(Insertion Sort)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC774\\uBBF8 \\uC815\\uB82C\\uB41C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"A[0:i-1]\"), \" \\uBC30\\uC5F4\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"A[i]\"), \" \\uB97C \\uBE44\\uAD50\\uD574\\uAC00\\uBA70 \\uC62C\\uBC14\\uB978 \\uC704\\uCE58\\uC5D0 \\uC0BD\\uC785\\uB420 \\uB54C\\uAE4C\\uC9C0 \\uC790\\uB9AC\\uB97C \\uBC14\\uAFBC\\uB2E4.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uBAA8\\uB4E0 \\uBC30\\uC5F4 \\uC694\\uC18C\\uC5D0 \\uB300\\uD574\\uC11C(\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u03B8(n)\"), \"), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u03B8(n)\"), \" \\uB9CC\\uD07C\\uC758 \\uBE44\\uAD50\\uC640 swap\\uC774 \\uD544\\uC694 => \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u03B8(n^2)\")), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uBE44\\uAD50\\uC640 swap\\uC758 \\uC791\\uC5C5\\uB7C9\\uC758 \\uD06C\\uAE30\\uB294 \\uAC70\\uC758 \\uBE44\\uC2B7\\uD558\\uB2E4\\uACE0 \\uAC00\\uC815\")))), mdx(\"h2\", null, \"\\uC774\\uC9C4 \\uC0BD\\uC785 \\uC815\\uB82C(Binary Insertion Sort)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"A[0:i-1]\"), \" \\uC740 \\uC774\\uBBF8 \\uC815\\uB82C\\uB418\\uC5B4 \\uC788\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uC0BD\\uC785\\uD560 \\uC790\\uB9AC\\uB97C \\uCC3E\\uC744 \\uB54C Binary search\\uB97C \\uC774\\uC6A9\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Binary search \\uC790\\uCCB4\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\u03B8(logn)\"), \" \\uC774\\uC9C0\\uB9CC \\uC0BD\\uC785 \\uC774\\uD6C4 \\uB098\\uBA38\\uC9C0 element\\uB4E4\\uC744 shift\\uD558\\uB294\\uB370 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\u03B8(n)\"), \" \\uC758 \\uC791\\uC5C5\\uB7C9\\uC744 \\uAC00\\uC9C0\\uBBC0\\uB85C \\uACB0\\uACFC\\uC801\\uC73C\\uB85C \\uB611\\uAC19\\uC774 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\u03B8(n^2)\"))), mdx(\"h2\", null, \"\\uBCD1\\uD569 \\uC815\\uB82C(Feat. Divide and Conquer)\"), mdx(\"p\", null, \"\\uBC30\\uC5F4 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"A\"), \"\\uB97C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"L\"), \" \\uACFC \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"R\"), \" \\uB85C \\uBD84\\uD560\\uD558\\uACE0 \\uAC01\\uAC01\\uC744 \\uC815\\uB82C\\uD55C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"L'\"), \" \\uACFC \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"R'\"), \" \\uC744 \\uBCD1\\uD569\\uD558\\uB294 \\uBC29\\uBC95\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n = 1\"), \" \\uC774\\uBA74 \\uC644\\uB8CC.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uADF8 \\uC678\\uC758 \\uACBD\\uC6B0\\uC5D4 \\uC7AC\\uADC0\\uC801\\uC73C\\uB85C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"A[1, ..., n / 2]\"), \" \\uC640 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"A[n / 2 + 1, ..., n]\"), \" \\uC744 \\uC815\\uB82C\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uC815\\uB82C\\uB41C \\uB450 sub-array\\uB4E4\\uC744 \\uBCD1\\uD569\\uD55C\\uB2E4.\")), mdx(\"h3\", null, \"Merge \\uBC29\\uC2DD\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://github.com/goonerholic/mit-6.006/blob/master/lecture-3/image1.png?raw=true\",\n    \"alt\": \"image1.png\"\n  }))), mdx(\"p\", null, \"\\uC88C\\uC6B0\\uB97C \\uBE44\\uAD50\\uD558\\uBA70 \\uC791\\uC740 \\uAC12\\uC744 \\uAC00\\uC838\\uC640\\uC11C \\uBC30\\uC5F4\\uC5D0 \\uCC44\\uC6CC\\uC900\\uB2E4.\"), mdx(\"h3\", null, \"\\uBCD1\\uD569\\uC815\\uB82C\\uC758 \\uBCF5\\uC7A1\\uB3C4 \\uBD84\\uC11D\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://github.com/goonerholic/mit-6.006/raw/master/lecture-3/image2.png\",\n    \"alt\": \"recursion tree\"\n  }))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u03B8(cn * (1 + lgn)) = \\u03B8(nlogn)\")), mdx(\"h3\", null, \"\\uACF5\\uAC04 \\uBCF5\\uC7A1\\uB3C4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0BD\\uC785\\uC815\\uB82C\\uC758 \\uACBD\\uC6B0 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"in-place\"), \" \\uB85C \\uC815\\uB82C\\uB418\\uBBC0\\uB85C \\uACF5\\uAC04 \\uBCF5\\uC7A1\\uB3C4\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\u03B8(1)\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBCD1\\uD569 \\uC815\\uB82C\\uC758 \\uACBD\\uC6B0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\u03B8(n)\"), \" \")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"2021-07-10T15:00:00.000Z","excerpt":"Sorting algorithms","slug":"sort-algorithm","title":"MIT-6.006 Intoduction to Algorithms - Lecture3(Insertion sort, Merge sort)"}}},"pageContext":{"id":"8030af33-7f45-56b9-aa65-e4ba703a7fea"}},"staticQueryHashes":["3159585216","63159454"]}
{"version":3,"sources":["webpack:///./src/components/common/Pagination.tsx","webpack:///./src/templates/PostListPage.tsx"],"names":["style","css","OpenColor","gray","Pagination","totalPages","currentPage","to","className","PostListPage","data","pageContext","numPages","Layout","Seo","title","ContentWrapper","PostList","posts","allMdx","postListQuery"],"mappings":"w5BAUA,IAAMA,EAAQC,YAAH,IAYIC,EAAUC,KAAK,GAUFD,EAAUC,KAAK,GAM1BD,EAAUC,KAAK,IAMjB,SAASC,EAAT,GAGK,IAFlBC,EAEkB,EAFlBA,WAEkB,IADlBC,mBACkB,MADJ,EACI,EAClB,OACE,mBAAKL,IAAKD,GACR,sBACE,sBACE,YAAC,OAAD,CACEO,GAAE,WAAYD,EAAc,GAAM,EAAI,GAAKA,EAAc,GACzDE,UAAS,sBACS,IAAhBF,EAAoB,YAAc,KAHtC,YASF,sBACE,YAAC,OAAD,CACEC,GAAE,WAAYD,EAAc,GAC5BE,UAAS,sBACPF,IAAgBD,EAAa,YAAc,KAH/C,c,gBC1CK,SAASI,EAAT,GAA4D,IAApCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,YACnCC,EAA0BD,EAA1BC,SAAUN,EAAgBK,EAAhBL,YAElB,OACE,YAACO,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CAAKC,MAAM,UACX,YAACC,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CAAUC,MAAOR,EAAKS,SACtB,YAAC,EAAD,CAASd,WAAYO,EAAUN,YAAaA,MAM7C,IAAMc,EAAgB","file":"component---src-templates-post-list-page-tsx-437c62e57084ef3983f1.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/react';\nimport { Link } from 'gatsby';\nimport OpenColor from 'open-color';\n\ninterface PaginationProps {\n  totalPages: number;\n  currentPage: number;\n}\n\nconst style = css`\n  display: flex;\n  justify-content: center;\n  padding: 6rem 0;\n\n  ul {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 20rem;\n\n    .post-nav-link {\n      color: ${OpenColor.gray[8]};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-style: italic;\n\n      &.prev,\n      &.next {\n        /* padding: 0 1rem;\n        border: none;\n        background-color: ${OpenColor.gray[8]};\n        color: white; */\n      }\n\n      &.disabled {\n        pointer-events: none;\n        color: ${OpenColor.gray[4]};\n      }\n    }\n  }\n`;\n\nexport default function Pagination({\n  totalPages,\n  currentPage = 1,\n}: PaginationProps) {\n  return (\n    <div css={style}>\n      <ul>\n        <li>\n          <Link\n            to={`/posts/${currentPage - 1 === 1 ? '' : currentPage - 1}`}\n            className={`post-nav-link prev${\n              currentPage === 1 ? ' disabled' : ''\n            }`}\n          >\n            &#60; 이전 목록\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={`/posts/${currentPage + 1}`}\n            className={`post-nav-link next${\n              currentPage === totalPages ? ' disabled' : ''\n            }`}\n          >\n            다음 목록 &#62;\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport { graphql } from 'gatsby';\nimport { PostListQuery } from '../../gatsby-graphql';\nimport PostList from '../components/blog/PostList';\nimport ContentWrapper from '../components/common/ContentWrapper';\nimport Layout from '../components/common/Layout';\nimport PostNav from '../components/common/Pagination';\nimport Seo from '../components/common/Seo';\n\ninterface PostListProps {\n  pageContext: {\n    limit: number;\n    skip: number;\n    numPages: number;\n    currentPage: number;\n  };\n  data: PostListQuery;\n}\n\nexport default function PostListPage({ data, pageContext }: PostListProps) {\n  const { numPages, currentPage } = pageContext;\n\n  return (\n    <Layout>\n      <Seo title=\"Posts\" />\n      <ContentWrapper>\n        <PostList posts={data.allMdx} />\n        <PostNav totalPages={numPages} currentPage={currentPage} />\n      </ContentWrapper>\n    </Layout>\n  );\n}\n\nexport const postListQuery = graphql`\n  query PostList($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            date\n            title\n            slug\n            image {\n              childImageSharp {\n                fluid(maxHeight: 200) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}